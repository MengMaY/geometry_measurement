// This file was automatically generated by hedwig.
// DO NOT MODIFY.
package mesea.model;

/**
 * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl.
 */
@odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl")
public class TrackMaintenance extends odase.Ontology implements java.io.Serializable {

    public TrackMaintenance(odase.Model model) {
        super(model);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Measurement.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Measurement")
    public static class Measurement extends odase.Individual implements java.io.Serializable {

        /**
         * Constructs a new Measurement individual with a unique URI
         * (this does not update the underlying model).
         */
        public Measurement(odase.Model model) {
            super(model, new odase.rdf.URINode("urn:uuid:" + java.util.UUID.randomUUID().toString()));
        }

        /**
         * Constructs a Measurement individual with the given model and resource
         * (this does not update the underlying model).
         */
        public Measurement(odase.Model model, odase.Resource resource) {
            super(model, resource);
        }

        /**
         * Constructs a Measurement individual with the given individual
         * (this does not update the underlying model).
         */
        public Measurement(odase.Individual i) {
            super(i.getModel(), i.getResource());
        }

        /**
         * Asserts that the receiver is a member of the Measurement OWL class
         * (this updates the underlying model by adding an rdf:type triple).
         */
        public Measurement assertType() {
            getModel().addObjectPropertyValue(this.getResource(), "http://www.w3.org/1999/02/22-rdf-syntax-ns#type", new odase.rdf.URINode("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Measurement"));
            return this;
        }

        /**
         * The object property that does not relate any two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getBottomObjectProperty() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#bottomObjectProperty", odase.Individual.class);
        }

        /**
         * A human-readable name for the subject.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#label.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#label")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getLabel() {
            return getDatatypePropertyValues("http://www.w3.org/2000/01/rdf-schema#label", new odase.LiteralConverter());
        }

        /**
         * The property that determines that two given individuals are different.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#differentFrom.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#differentFrom")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getDifferentFrom() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#differentFrom", odase.Individual.class);
        }

        /**
         * The property that determines that two given individuals are equal.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#sameAs.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#sameAs")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getSameAs() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#sameAs", odase.Individual.class);
        }

        /**
         * The data property that does not relate any individual to any data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getBottomDataProperty() {
            return getDatatypePropertyValues("http://www.w3.org/2002/07/owl#bottomDataProperty", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Measurement getPrecededByMeasurement() {
            return getFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Rail getIsMeasurementForRail() {
            return getFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail", mesea.model.TrackMaintenance.Rail.class);
        }

        /**
         * The subject is an instance of a class.
         * <p>
         * Generated for http://www.w3.org/1999/02/22-rdf-syntax-ns#type.
         */
        @odase.annotations.SourceURI("http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getType() {
            return getObjectPropertyValues("http://www.w3.org/1999/02/22-rdf-syntax-ns#type", odase.Individual.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Measurement getFollowedByMeasurement() {
            return getFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * The property that determines the collection of members in either a owl:AllDifferent, owl:AllDisjointClasses or owl:AllDisjointProperties axiom.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#members.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#members")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getMembers() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#members", odase.Individual.class);
        }

        /**
         * The data property that relates every individual to every data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getTopDataProperty() {
            return getDatatypePropertyValues("http://www.w3.org/2002/07/owl#topDataProperty", new odase.LiteralConverter());
        }

        /**
         * A description of the subject resource.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#comment.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#comment")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getComment() {
            return getDatatypePropertyValues("http://www.w3.org/2000/01/rdf-schema#comment", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public java.lang.Float getPosition() {
            return getFunctionalDatatypePropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"));
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public java.lang.Float getDeviationValue() {
            return getFunctionalDatatypePropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"));
        }

        /**
         * The object property that relates every two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getTopObjectProperty() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#topObjectProperty", odase.Individual.class);
        }

        /**
         * The object property that does not relate any two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getBottomObjectPropertyConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#bottomObjectProperty", odase.Individual.class);
        }

        /**
         * A human-readable name for the subject.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#label.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#label")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getLabelConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2000/01/rdf-schema#label", new odase.LiteralConverter());
        }

        /**
         * The property that determines that two given individuals are different.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#differentFrom.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#differentFrom")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getDifferentFromConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#differentFrom", odase.Individual.class);
        }

        /**
         * The property that determines that two given individuals are equal.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#sameAs.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#sameAs")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getSameAsConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#sameAs", odase.Individual.class);
        }

        /**
         * The data property that does not relate any individual to any data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getBottomDataPropertyConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2002/07/owl#bottomDataProperty", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<mesea.model.TrackMaintenance.Measurement> getPrecededByMeasurementConc() {
            return getFunctionalObjectPropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<mesea.model.TrackMaintenance.Rail> getIsMeasurementForRailConc() {
            return getFunctionalObjectPropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail", mesea.model.TrackMaintenance.Rail.class);
        }

        /**
         * The subject is an instance of a class.
         * <p>
         * Generated for http://www.w3.org/1999/02/22-rdf-syntax-ns#type.
         */
        @odase.annotations.SourceURI("http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getTypeConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/1999/02/22-rdf-syntax-ns#type", odase.Individual.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<mesea.model.TrackMaintenance.Measurement> getFollowedByMeasurementConc() {
            return getFunctionalObjectPropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * The property that determines the collection of members in either a owl:AllDifferent, owl:AllDisjointClasses or owl:AllDisjointProperties axiom.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#members.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#members")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getMembersConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#members", odase.Individual.class);
        }

        /**
         * The data property that relates every individual to every data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getTopDataPropertyConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2002/07/owl#topDataProperty", new odase.LiteralConverter());
        }

        /**
         * A description of the subject resource.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#comment.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#comment")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getCommentConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2000/01/rdf-schema#comment", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<java.lang.Float> getPositionConc() {
            return getFunctionalDatatypePropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"));
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<java.lang.Float> getDeviationValueConc() {
            return getFunctionalDatatypePropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"));
        }

        /**
         * The object property that relates every two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getTopObjectPropertyConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#topObjectProperty", odase.Individual.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Measurement setPrecededByMeasurement(mesea.model.TrackMaintenance.Measurement value) {
            setFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement", value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Measurement setIsMeasurementForRail(mesea.model.TrackMaintenance.Rail value) {
            setFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail", value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Measurement setFollowedByMeasurement(mesea.model.TrackMaintenance.Measurement value) {
            setFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement", value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Measurement setPosition(java.lang.Float value) {
            setFunctionalDatatypePropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"), value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Measurement setDeviationValue(java.lang.Float value) {
            setFunctionalDatatypePropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"), value);
            return this;
        }

        /**
         * Tests whether the current individual is a member of the DegradationPoint subclass or not.
         */
        public boolean isDegradationPoint() {
            return getModel().isMember("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#DegradationPoint", getResource());
        }

        /**
         * Returns the current individual as an individual of the DegradationPoint subclass
         * (returns null if the current individual is not a member of the DegradationPoint subclass).
         */
        public mesea.model.TrackMaintenance.DegradationPoint asDegradationPoint() {
            if(isDegradationPoint()) return new mesea.model.TrackMaintenance.DegradationPoint(this);
            else return null;
        }

        /**
         * Tests whether the current individual is a member of the InterventionPoint subclass or not.
         */
        public boolean isInterventionPoint() {
            return getModel().isMember("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#InterventionPoint", getResource());
        }

        /**
         * Returns the current individual as an individual of the InterventionPoint subclass
         * (returns null if the current individual is not a member of the InterventionPoint subclass).
         */
        public mesea.model.TrackMaintenance.InterventionPoint asInterventionPoint() {
            if(isInterventionPoint()) return new mesea.model.TrackMaintenance.InterventionPoint(this);
            else return null;
        }

        /**
         * Tests whether the current individual is a member of the NominalPoint subclass or not.
         */
        public boolean isNominalPoint() {
            return getModel().isMember("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#NominalPoint", getResource());
        }

        /**
         * Returns the current individual as an individual of the NominalPoint subclass
         * (returns null if the current individual is not a member of the NominalPoint subclass).
         */
        public mesea.model.TrackMaintenance.NominalPoint asNominalPoint() {
            if(isNominalPoint()) return new mesea.model.TrackMaintenance.NominalPoint(this);
            else return null;
        }

        /**
         * Tests whether the current individual is a member of the SlowdownPoint subclass or not.
         */
        public boolean isSlowdownPoint() {
            return getModel().isMember("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#SlowdownPoint", getResource());
        }

        /**
         * Returns the current individual as an individual of the SlowdownPoint subclass
         * (returns null if the current individual is not a member of the SlowdownPoint subclass).
         */
        public mesea.model.TrackMaintenance.SlowdownPoint asSlowdownPoint() {
            if(isSlowdownPoint()) return new mesea.model.TrackMaintenance.SlowdownPoint(this);
            else return null;
        }

        /**
         * Tests whether the current individual is a member of the AlertPoint subclass or not.
         */
        public boolean isAlertPoint() {
            return getModel().isMember("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#AlertPoint", getResource());
        }

        /**
         * Returns the current individual as an individual of the AlertPoint subclass
         * (returns null if the current individual is not a member of the AlertPoint subclass).
         */
        public mesea.model.TrackMaintenance.AlertPoint asAlertPoint() {
            if(isAlertPoint()) return new mesea.model.TrackMaintenance.AlertPoint(this);
            else return null;
        }

    }

    /**
     * Constructs a Measurement individual with the given individual
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.Measurement newMeasurement(odase.Individual indiv) {
        return new mesea.model.TrackMaintenance.Measurement(this.getModel(), indiv.getResource());
    }

    /**
     * Constructs a Measurement individual with the given resource
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.Measurement newMeasurement(odase.Resource resource) {
        return new mesea.model.TrackMaintenance.Measurement(this.getModel(), resource);
    }

    /**
     * Constructs a Measurement individual with the given URI
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.Measurement newMeasurement(String uri) {
        return new mesea.model.TrackMaintenance.Measurement(this.getModel(), new odase.rdf.URINode(uri));
    }

    /**
     * Constructs a new Measurement individual with a unique URI
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.Measurement newMeasurement() {
        return new mesea.model.TrackMaintenance.Measurement(this.getModel());
    }

    /**
     * Constructs a Measurement individual with the given individual
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.Measurement assertMeasurement(odase.Individual indiv) {
        mesea.model.TrackMaintenance.Measurement instance = new mesea.model.TrackMaintenance.Measurement(this.getModel(), indiv.getResource());
        instance.assertType();
        return instance;
    }

    /**
     * Constructs a Measurement individual with the given resource
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.Measurement assertMeasurement(odase.Resource resource) {
        mesea.model.TrackMaintenance.Measurement instance = new mesea.model.TrackMaintenance.Measurement(this.getModel(), resource);
        instance.assertType();
        return instance;
    }

    /**
     * Constructs a Measurement individual with the given URI
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.Measurement assertMeasurement(String uri) {
        mesea.model.TrackMaintenance.Measurement instance = new mesea.model.TrackMaintenance.Measurement(this.getModel(), new odase.rdf.URINode(uri));
        instance.assertType();
        return instance;
    }

    /**
     * Constructs a new Measurement individual with a unique URI
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.Measurement assertMeasurement() {
        mesea.model.TrackMaintenance.Measurement instance = new mesea.model.TrackMaintenance.Measurement(this.getModel());
        instance.assertType();
        return instance;
    }

    public java.util.List<mesea.model.TrackMaintenance.Measurement> allMeasurement() {
        java.util.List<odase.Resource> resources = this.getModel().getInstances("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Measurement");
        java.util.List<mesea.model.TrackMaintenance.Measurement> instances = new java.util.ArrayList<mesea.model.TrackMaintenance.Measurement>(resources.size());
        for (odase.Resource r : resources) {
            instances.add(new mesea.model.TrackMaintenance.Measurement(this.getModel(), r));
        }
        return instances;
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#DegradationPoint.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#DegradationPoint")
    public static class DegradationPoint extends odase.Individual implements java.io.Serializable {

        /**
         * Constructs a new DegradationPoint individual with a unique URI
         * (this does not update the underlying model).
         */
        public DegradationPoint(odase.Model model) {
            super(model, new odase.rdf.URINode("urn:uuid:" + java.util.UUID.randomUUID().toString()));
        }

        /**
         * Constructs a DegradationPoint individual with the given model and resource
         * (this does not update the underlying model).
         */
        public DegradationPoint(odase.Model model, odase.Resource resource) {
            super(model, resource);
        }

        /**
         * Constructs a DegradationPoint individual with the given individual
         * (this does not update the underlying model).
         */
        public DegradationPoint(odase.Individual i) {
            super(i.getModel(), i.getResource());
        }

        /**
         * Asserts that the receiver is a member of the DegradationPoint OWL class
         * (this updates the underlying model by adding an rdf:type triple).
         */
        public DegradationPoint assertType() {
            getModel().addObjectPropertyValue(this.getResource(), "http://www.w3.org/1999/02/22-rdf-syntax-ns#type", new odase.rdf.URINode("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#DegradationPoint"));
            return this;
        }

        /**
         * The object property that does not relate any two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getBottomObjectProperty() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#bottomObjectProperty", odase.Individual.class);
        }

        /**
         * A human-readable name for the subject.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#label.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#label")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getLabel() {
            return getDatatypePropertyValues("http://www.w3.org/2000/01/rdf-schema#label", new odase.LiteralConverter());
        }

        /**
         * The property that determines that two given individuals are different.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#differentFrom.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#differentFrom")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getDifferentFrom() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#differentFrom", odase.Individual.class);
        }

        /**
         * The property that determines that two given individuals are equal.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#sameAs.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#sameAs")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getSameAs() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#sameAs", odase.Individual.class);
        }

        /**
         * The data property that does not relate any individual to any data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getBottomDataProperty() {
            return getDatatypePropertyValues("http://www.w3.org/2002/07/owl#bottomDataProperty", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Measurement getPrecededByMeasurement() {
            return getFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Rail getIsMeasurementForRail() {
            return getFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail", mesea.model.TrackMaintenance.Rail.class);
        }

        /**
         * The subject is an instance of a class.
         * <p>
         * Generated for http://www.w3.org/1999/02/22-rdf-syntax-ns#type.
         */
        @odase.annotations.SourceURI("http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getType() {
            return getObjectPropertyValues("http://www.w3.org/1999/02/22-rdf-syntax-ns#type", odase.Individual.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Measurement getFollowedByMeasurement() {
            return getFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * The property that determines the collection of members in either a owl:AllDifferent, owl:AllDisjointClasses or owl:AllDisjointProperties axiom.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#members.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#members")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getMembers() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#members", odase.Individual.class);
        }

        /**
         * The data property that relates every individual to every data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getTopDataProperty() {
            return getDatatypePropertyValues("http://www.w3.org/2002/07/owl#topDataProperty", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Rail getIsDegradationPointForRail() {
            return getFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail", mesea.model.TrackMaintenance.Rail.class);
        }

        /**
         * A description of the subject resource.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#comment.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#comment")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getComment() {
            return getDatatypePropertyValues("http://www.w3.org/2000/01/rdf-schema#comment", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public java.lang.Float getPosition() {
            return getFunctionalDatatypePropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"));
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public java.lang.Float getDeviationValue() {
            return getFunctionalDatatypePropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"));
        }

        /**
         * The object property that relates every two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getTopObjectProperty() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#topObjectProperty", odase.Individual.class);
        }

        /**
         * The object property that does not relate any two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getBottomObjectPropertyConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#bottomObjectProperty", odase.Individual.class);
        }

        /**
         * A human-readable name for the subject.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#label.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#label")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getLabelConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2000/01/rdf-schema#label", new odase.LiteralConverter());
        }

        /**
         * The property that determines that two given individuals are different.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#differentFrom.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#differentFrom")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getDifferentFromConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#differentFrom", odase.Individual.class);
        }

        /**
         * The property that determines that two given individuals are equal.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#sameAs.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#sameAs")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getSameAsConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#sameAs", odase.Individual.class);
        }

        /**
         * The data property that does not relate any individual to any data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getBottomDataPropertyConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2002/07/owl#bottomDataProperty", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<mesea.model.TrackMaintenance.Measurement> getPrecededByMeasurementConc() {
            return getFunctionalObjectPropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<mesea.model.TrackMaintenance.Rail> getIsMeasurementForRailConc() {
            return getFunctionalObjectPropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail", mesea.model.TrackMaintenance.Rail.class);
        }

        /**
         * The subject is an instance of a class.
         * <p>
         * Generated for http://www.w3.org/1999/02/22-rdf-syntax-ns#type.
         */
        @odase.annotations.SourceURI("http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getTypeConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/1999/02/22-rdf-syntax-ns#type", odase.Individual.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<mesea.model.TrackMaintenance.Measurement> getFollowedByMeasurementConc() {
            return getFunctionalObjectPropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * The property that determines the collection of members in either a owl:AllDifferent, owl:AllDisjointClasses or owl:AllDisjointProperties axiom.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#members.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#members")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getMembersConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#members", odase.Individual.class);
        }

        /**
         * The data property that relates every individual to every data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getTopDataPropertyConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2002/07/owl#topDataProperty", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<mesea.model.TrackMaintenance.Rail> getIsDegradationPointForRailConc() {
            return getFunctionalObjectPropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail", mesea.model.TrackMaintenance.Rail.class);
        }

        /**
         * A description of the subject resource.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#comment.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#comment")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getCommentConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2000/01/rdf-schema#comment", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<java.lang.Float> getPositionConc() {
            return getFunctionalDatatypePropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"));
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<java.lang.Float> getDeviationValueConc() {
            return getFunctionalDatatypePropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"));
        }

        /**
         * The object property that relates every two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getTopObjectPropertyConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#topObjectProperty", odase.Individual.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.DegradationPoint setPrecededByMeasurement(mesea.model.TrackMaintenance.Measurement value) {
            setFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement", value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.DegradationPoint setIsMeasurementForRail(mesea.model.TrackMaintenance.Rail value) {
            setFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail", value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.DegradationPoint setFollowedByMeasurement(mesea.model.TrackMaintenance.Measurement value) {
            setFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement", value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.DegradationPoint setIsDegradationPointForRail(mesea.model.TrackMaintenance.Rail value) {
            setFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail", value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.DegradationPoint setPosition(java.lang.Float value) {
            setFunctionalDatatypePropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"), value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.DegradationPoint setDeviationValue(java.lang.Float value) {
            setFunctionalDatatypePropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"), value);
            return this;
        }

        /**
         * Returns the current individual as an individual of the Measurement superclass.
         */
        public mesea.model.TrackMaintenance.Measurement asMeasurement() {
            return new mesea.model.TrackMaintenance.Measurement(this);
        }

        /**
         * Tests whether the current individual is a member of the InterventionPoint subclass or not.
         */
        public boolean isInterventionPoint() {
            return getModel().isMember("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#InterventionPoint", getResource());
        }

        /**
         * Returns the current individual as an individual of the InterventionPoint subclass
         * (returns null if the current individual is not a member of the InterventionPoint subclass).
         */
        public mesea.model.TrackMaintenance.InterventionPoint asInterventionPoint() {
            if(isInterventionPoint()) return new mesea.model.TrackMaintenance.InterventionPoint(this);
            else return null;
        }

        /**
         * Tests whether the current individual is a member of the NominalPoint subclass or not.
         */
        public boolean isNominalPoint() {
            return getModel().isMember("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#NominalPoint", getResource());
        }

        /**
         * Returns the current individual as an individual of the NominalPoint subclass
         * (returns null if the current individual is not a member of the NominalPoint subclass).
         */
        public mesea.model.TrackMaintenance.NominalPoint asNominalPoint() {
            if(isNominalPoint()) return new mesea.model.TrackMaintenance.NominalPoint(this);
            else return null;
        }

        /**
         * Tests whether the current individual is a member of the SlowdownPoint subclass or not.
         */
        public boolean isSlowdownPoint() {
            return getModel().isMember("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#SlowdownPoint", getResource());
        }

        /**
         * Returns the current individual as an individual of the SlowdownPoint subclass
         * (returns null if the current individual is not a member of the SlowdownPoint subclass).
         */
        public mesea.model.TrackMaintenance.SlowdownPoint asSlowdownPoint() {
            if(isSlowdownPoint()) return new mesea.model.TrackMaintenance.SlowdownPoint(this);
            else return null;
        }

        /**
         * Tests whether the current individual is a member of the AlertPoint subclass or not.
         */
        public boolean isAlertPoint() {
            return getModel().isMember("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#AlertPoint", getResource());
        }

        /**
         * Returns the current individual as an individual of the AlertPoint subclass
         * (returns null if the current individual is not a member of the AlertPoint subclass).
         */
        public mesea.model.TrackMaintenance.AlertPoint asAlertPoint() {
            if(isAlertPoint()) return new mesea.model.TrackMaintenance.AlertPoint(this);
            else return null;
        }

    }

    /**
     * Constructs a DegradationPoint individual with the given individual
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.DegradationPoint newDegradationPoint(odase.Individual indiv) {
        return new mesea.model.TrackMaintenance.DegradationPoint(this.getModel(), indiv.getResource());
    }

    /**
     * Constructs a DegradationPoint individual with the given resource
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.DegradationPoint newDegradationPoint(odase.Resource resource) {
        return new mesea.model.TrackMaintenance.DegradationPoint(this.getModel(), resource);
    }

    /**
     * Constructs a DegradationPoint individual with the given URI
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.DegradationPoint newDegradationPoint(String uri) {
        return new mesea.model.TrackMaintenance.DegradationPoint(this.getModel(), new odase.rdf.URINode(uri));
    }

    /**
     * Constructs a new DegradationPoint individual with a unique URI
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.DegradationPoint newDegradationPoint() {
        return new mesea.model.TrackMaintenance.DegradationPoint(this.getModel());
    }

    /**
     * Constructs a DegradationPoint individual with the given individual
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.DegradationPoint assertDegradationPoint(odase.Individual indiv) {
        mesea.model.TrackMaintenance.DegradationPoint instance = new mesea.model.TrackMaintenance.DegradationPoint(this.getModel(), indiv.getResource());
        instance.assertType();
        return instance;
    }

    /**
     * Constructs a DegradationPoint individual with the given resource
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.DegradationPoint assertDegradationPoint(odase.Resource resource) {
        mesea.model.TrackMaintenance.DegradationPoint instance = new mesea.model.TrackMaintenance.DegradationPoint(this.getModel(), resource);
        instance.assertType();
        return instance;
    }

    /**
     * Constructs a DegradationPoint individual with the given URI
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.DegradationPoint assertDegradationPoint(String uri) {
        mesea.model.TrackMaintenance.DegradationPoint instance = new mesea.model.TrackMaintenance.DegradationPoint(this.getModel(), new odase.rdf.URINode(uri));
        instance.assertType();
        return instance;
    }

    /**
     * Constructs a new DegradationPoint individual with a unique URI
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.DegradationPoint assertDegradationPoint() {
        mesea.model.TrackMaintenance.DegradationPoint instance = new mesea.model.TrackMaintenance.DegradationPoint(this.getModel());
        instance.assertType();
        return instance;
    }

    public java.util.List<mesea.model.TrackMaintenance.DegradationPoint> allDegradationPoint() {
        java.util.List<odase.Resource> resources = this.getModel().getInstances("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#DegradationPoint");
        java.util.List<mesea.model.TrackMaintenance.DegradationPoint> instances = new java.util.ArrayList<mesea.model.TrackMaintenance.DegradationPoint>(resources.size());
        for (odase.Resource r : resources) {
            instances.add(new mesea.model.TrackMaintenance.DegradationPoint(this.getModel(), r));
        }
        return instances;
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#InterventionPoint.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#InterventionPoint")
    public static class InterventionPoint extends odase.Individual implements java.io.Serializable {

        /**
         * Constructs a new InterventionPoint individual with a unique URI
         * (this does not update the underlying model).
         */
        public InterventionPoint(odase.Model model) {
            super(model, new odase.rdf.URINode("urn:uuid:" + java.util.UUID.randomUUID().toString()));
        }

        /**
         * Constructs a InterventionPoint individual with the given model and resource
         * (this does not update the underlying model).
         */
        public InterventionPoint(odase.Model model, odase.Resource resource) {
            super(model, resource);
        }

        /**
         * Constructs a InterventionPoint individual with the given individual
         * (this does not update the underlying model).
         */
        public InterventionPoint(odase.Individual i) {
            super(i.getModel(), i.getResource());
        }

        /**
         * Asserts that the receiver is a member of the InterventionPoint OWL class
         * (this updates the underlying model by adding an rdf:type triple).
         */
        public InterventionPoint assertType() {
            getModel().addObjectPropertyValue(this.getResource(), "http://www.w3.org/1999/02/22-rdf-syntax-ns#type", new odase.rdf.URINode("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#InterventionPoint"));
            return this;
        }

        /**
         * The object property that does not relate any two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getBottomObjectProperty() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#bottomObjectProperty", odase.Individual.class);
        }

        /**
         * A human-readable name for the subject.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#label.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#label")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getLabel() {
            return getDatatypePropertyValues("http://www.w3.org/2000/01/rdf-schema#label", new odase.LiteralConverter());
        }

        /**
         * The property that determines that two given individuals are different.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#differentFrom.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#differentFrom")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getDifferentFrom() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#differentFrom", odase.Individual.class);
        }

        /**
         * The property that determines that two given individuals are equal.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#sameAs.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#sameAs")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getSameAs() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#sameAs", odase.Individual.class);
        }

        /**
         * The data property that does not relate any individual to any data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getBottomDataProperty() {
            return getDatatypePropertyValues("http://www.w3.org/2002/07/owl#bottomDataProperty", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Measurement getPrecededByMeasurement() {
            return getFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Rail getIsMeasurementForRail() {
            return getFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail", mesea.model.TrackMaintenance.Rail.class);
        }

        /**
         * The subject is an instance of a class.
         * <p>
         * Generated for http://www.w3.org/1999/02/22-rdf-syntax-ns#type.
         */
        @odase.annotations.SourceURI("http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getType() {
            return getObjectPropertyValues("http://www.w3.org/1999/02/22-rdf-syntax-ns#type", odase.Individual.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Measurement getFollowedByMeasurement() {
            return getFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * The property that determines the collection of members in either a owl:AllDifferent, owl:AllDisjointClasses or owl:AllDisjointProperties axiom.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#members.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#members")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getMembers() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#members", odase.Individual.class);
        }

        /**
         * The data property that relates every individual to every data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getTopDataProperty() {
            return getDatatypePropertyValues("http://www.w3.org/2002/07/owl#topDataProperty", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Rail getIsDegradationPointForRail() {
            return getFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail", mesea.model.TrackMaintenance.Rail.class);
        }

        /**
         * A description of the subject resource.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#comment.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#comment")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getComment() {
            return getDatatypePropertyValues("http://www.w3.org/2000/01/rdf-schema#comment", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public java.lang.Float getPosition() {
            return getFunctionalDatatypePropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"));
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public java.lang.Float getDeviationValue() {
            return getFunctionalDatatypePropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"));
        }

        /**
         * The object property that relates every two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getTopObjectProperty() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#topObjectProperty", odase.Individual.class);
        }

        /**
         * The object property that does not relate any two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getBottomObjectPropertyConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#bottomObjectProperty", odase.Individual.class);
        }

        /**
         * A human-readable name for the subject.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#label.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#label")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getLabelConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2000/01/rdf-schema#label", new odase.LiteralConverter());
        }

        /**
         * The property that determines that two given individuals are different.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#differentFrom.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#differentFrom")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getDifferentFromConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#differentFrom", odase.Individual.class);
        }

        /**
         * The property that determines that two given individuals are equal.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#sameAs.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#sameAs")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getSameAsConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#sameAs", odase.Individual.class);
        }

        /**
         * The data property that does not relate any individual to any data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getBottomDataPropertyConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2002/07/owl#bottomDataProperty", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<mesea.model.TrackMaintenance.Measurement> getPrecededByMeasurementConc() {
            return getFunctionalObjectPropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<mesea.model.TrackMaintenance.Rail> getIsMeasurementForRailConc() {
            return getFunctionalObjectPropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail", mesea.model.TrackMaintenance.Rail.class);
        }

        /**
         * The subject is an instance of a class.
         * <p>
         * Generated for http://www.w3.org/1999/02/22-rdf-syntax-ns#type.
         */
        @odase.annotations.SourceURI("http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getTypeConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/1999/02/22-rdf-syntax-ns#type", odase.Individual.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<mesea.model.TrackMaintenance.Measurement> getFollowedByMeasurementConc() {
            return getFunctionalObjectPropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * The property that determines the collection of members in either a owl:AllDifferent, owl:AllDisjointClasses or owl:AllDisjointProperties axiom.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#members.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#members")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getMembersConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#members", odase.Individual.class);
        }

        /**
         * The data property that relates every individual to every data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getTopDataPropertyConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2002/07/owl#topDataProperty", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<mesea.model.TrackMaintenance.Rail> getIsDegradationPointForRailConc() {
            return getFunctionalObjectPropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail", mesea.model.TrackMaintenance.Rail.class);
        }

        /**
         * A description of the subject resource.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#comment.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#comment")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getCommentConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2000/01/rdf-schema#comment", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<java.lang.Float> getPositionConc() {
            return getFunctionalDatatypePropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"));
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<java.lang.Float> getDeviationValueConc() {
            return getFunctionalDatatypePropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"));
        }

        /**
         * The object property that relates every two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getTopObjectPropertyConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#topObjectProperty", odase.Individual.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.InterventionPoint setPrecededByMeasurement(mesea.model.TrackMaintenance.Measurement value) {
            setFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement", value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.InterventionPoint setIsMeasurementForRail(mesea.model.TrackMaintenance.Rail value) {
            setFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail", value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.InterventionPoint setFollowedByMeasurement(mesea.model.TrackMaintenance.Measurement value) {
            setFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement", value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.InterventionPoint setIsDegradationPointForRail(mesea.model.TrackMaintenance.Rail value) {
            setFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail", value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.InterventionPoint setPosition(java.lang.Float value) {
            setFunctionalDatatypePropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"), value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.InterventionPoint setDeviationValue(java.lang.Float value) {
            setFunctionalDatatypePropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"), value);
            return this;
        }

        /**
         * Returns the current individual as an individual of the Measurement superclass.
         */
        public mesea.model.TrackMaintenance.Measurement asMeasurement() {
            return new mesea.model.TrackMaintenance.Measurement(this);
        }

        /**
         * Returns the current individual as an individual of the DegradationPoint superclass.
         */
        public mesea.model.TrackMaintenance.DegradationPoint asDegradationPoint() {
            return new mesea.model.TrackMaintenance.DegradationPoint(this);
        }

    }

    /**
     * Constructs a InterventionPoint individual with the given individual
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.InterventionPoint newInterventionPoint(odase.Individual indiv) {
        return new mesea.model.TrackMaintenance.InterventionPoint(this.getModel(), indiv.getResource());
    }

    /**
     * Constructs a InterventionPoint individual with the given resource
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.InterventionPoint newInterventionPoint(odase.Resource resource) {
        return new mesea.model.TrackMaintenance.InterventionPoint(this.getModel(), resource);
    }

    /**
     * Constructs a InterventionPoint individual with the given URI
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.InterventionPoint newInterventionPoint(String uri) {
        return new mesea.model.TrackMaintenance.InterventionPoint(this.getModel(), new odase.rdf.URINode(uri));
    }

    /**
     * Constructs a new InterventionPoint individual with a unique URI
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.InterventionPoint newInterventionPoint() {
        return new mesea.model.TrackMaintenance.InterventionPoint(this.getModel());
    }

    /**
     * Constructs a InterventionPoint individual with the given individual
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.InterventionPoint assertInterventionPoint(odase.Individual indiv) {
        mesea.model.TrackMaintenance.InterventionPoint instance = new mesea.model.TrackMaintenance.InterventionPoint(this.getModel(), indiv.getResource());
        instance.assertType();
        return instance;
    }

    /**
     * Constructs a InterventionPoint individual with the given resource
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.InterventionPoint assertInterventionPoint(odase.Resource resource) {
        mesea.model.TrackMaintenance.InterventionPoint instance = new mesea.model.TrackMaintenance.InterventionPoint(this.getModel(), resource);
        instance.assertType();
        return instance;
    }

    /**
     * Constructs a InterventionPoint individual with the given URI
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.InterventionPoint assertInterventionPoint(String uri) {
        mesea.model.TrackMaintenance.InterventionPoint instance = new mesea.model.TrackMaintenance.InterventionPoint(this.getModel(), new odase.rdf.URINode(uri));
        instance.assertType();
        return instance;
    }

    /**
     * Constructs a new InterventionPoint individual with a unique URI
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.InterventionPoint assertInterventionPoint() {
        mesea.model.TrackMaintenance.InterventionPoint instance = new mesea.model.TrackMaintenance.InterventionPoint(this.getModel());
        instance.assertType();
        return instance;
    }

    public java.util.List<mesea.model.TrackMaintenance.InterventionPoint> allInterventionPoint() {
        java.util.List<odase.Resource> resources = this.getModel().getInstances("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#InterventionPoint");
        java.util.List<mesea.model.TrackMaintenance.InterventionPoint> instances = new java.util.ArrayList<mesea.model.TrackMaintenance.InterventionPoint>(resources.size());
        for (odase.Resource r : resources) {
            instances.add(new mesea.model.TrackMaintenance.InterventionPoint(this.getModel(), r));
        }
        return instances;
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Rail.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Rail")
    public static class Rail extends odase.Individual implements java.io.Serializable {

        /**
         * Constructs a new Rail individual with a unique URI
         * (this does not update the underlying model).
         */
        public Rail(odase.Model model) {
            super(model, new odase.rdf.URINode("urn:uuid:" + java.util.UUID.randomUUID().toString()));
        }

        /**
         * Constructs a Rail individual with the given model and resource
         * (this does not update the underlying model).
         */
        public Rail(odase.Model model, odase.Resource resource) {
            super(model, resource);
        }

        /**
         * Constructs a Rail individual with the given individual
         * (this does not update the underlying model).
         */
        public Rail(odase.Individual i) {
            super(i.getModel(), i.getResource());
        }

        /**
         * Asserts that the receiver is a member of the Rail OWL class
         * (this updates the underlying model by adding an rdf:type triple).
         */
        public Rail assertType() {
            getModel().addObjectPropertyValue(this.getResource(), "http://www.w3.org/1999/02/22-rdf-syntax-ns#type", new odase.rdf.URINode("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Rail"));
            return this;
        }

        /**
         * The object property that does not relate any two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getBottomObjectProperty() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#bottomObjectProperty", odase.Individual.class);
        }

        /**
         * A human-readable name for the subject.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#label.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#label")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getLabel() {
            return getDatatypePropertyValues("http://www.w3.org/2000/01/rdf-schema#label", new odase.LiteralConverter());
        }

        /**
         * The property that determines that two given individuals are different.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#differentFrom.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#differentFrom")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getDifferentFrom() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#differentFrom", odase.Individual.class);
        }

        /**
         * The property that determines that two given individuals are equal.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#sameAs.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#sameAs")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getSameAs() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#sameAs", odase.Individual.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasDegradationPoint.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasDegradationPoint")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.DegradationPoint.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<mesea.model.TrackMaintenance.DegradationPoint> getHasDegradationPoint() {
            return getObjectPropertyValues("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasDegradationPoint", mesea.model.TrackMaintenance.DegradationPoint.class);
        }

        /**
         * The data property that does not relate any individual to any data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getBottomDataProperty() {
            return getDatatypePropertyValues("http://www.w3.org/2002/07/owl#bottomDataProperty", new odase.LiteralConverter());
        }

        /**
         * The subject is an instance of a class.
         * <p>
         * Generated for http://www.w3.org/1999/02/22-rdf-syntax-ns#type.
         */
        @odase.annotations.SourceURI("http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getType() {
            return getObjectPropertyValues("http://www.w3.org/1999/02/22-rdf-syntax-ns#type", odase.Individual.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isRailForTrack.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isRailForTrack")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Track.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<mesea.model.TrackMaintenance.Track> getIsRailForTrack() {
            return getObjectPropertyValues("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isRailForTrack", mesea.model.TrackMaintenance.Track.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<mesea.model.TrackMaintenance.Measurement> getHasMeasurement() {
            return getObjectPropertyValues("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * The property that determines the collection of members in either a owl:AllDifferent, owl:AllDisjointClasses or owl:AllDisjointProperties axiom.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#members.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#members")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getMembers() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#members", odase.Individual.class);
        }

        /**
         * The data property that relates every individual to every data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getTopDataProperty() {
            return getDatatypePropertyValues("http://www.w3.org/2002/07/owl#topDataProperty", new odase.LiteralConverter());
        }

        /**
         * A description of the subject resource.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#comment.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#comment")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getComment() {
            return getDatatypePropertyValues("http://www.w3.org/2000/01/rdf-schema#comment", new odase.LiteralConverter());
        }

        /**
         * The object property that relates every two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getTopObjectProperty() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#topObjectProperty", odase.Individual.class);
        }

        /**
         * The object property that does not relate any two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getBottomObjectPropertyConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#bottomObjectProperty", odase.Individual.class);
        }

        /**
         * A human-readable name for the subject.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#label.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#label")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getLabelConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2000/01/rdf-schema#label", new odase.LiteralConverter());
        }

        /**
         * The property that determines that two given individuals are different.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#differentFrom.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#differentFrom")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getDifferentFromConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#differentFrom", odase.Individual.class);
        }

        /**
         * The property that determines that two given individuals are equal.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#sameAs.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#sameAs")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getSameAsConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#sameAs", odase.Individual.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasDegradationPoint.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasDegradationPoint")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.DegradationPoint.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<mesea.model.TrackMaintenance.DegradationPoint>> getHasDegradationPointConc() {
            return getObjectPropertyValuesConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasDegradationPoint", mesea.model.TrackMaintenance.DegradationPoint.class);
        }

        /**
         * The data property that does not relate any individual to any data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getBottomDataPropertyConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2002/07/owl#bottomDataProperty", new odase.LiteralConverter());
        }

        /**
         * The subject is an instance of a class.
         * <p>
         * Generated for http://www.w3.org/1999/02/22-rdf-syntax-ns#type.
         */
        @odase.annotations.SourceURI("http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getTypeConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/1999/02/22-rdf-syntax-ns#type", odase.Individual.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isRailForTrack.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isRailForTrack")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Track.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<mesea.model.TrackMaintenance.Track>> getIsRailForTrackConc() {
            return getObjectPropertyValuesConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isRailForTrack", mesea.model.TrackMaintenance.Track.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<mesea.model.TrackMaintenance.Measurement>> getHasMeasurementConc() {
            return getObjectPropertyValuesConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * The property that determines the collection of members in either a owl:AllDifferent, owl:AllDisjointClasses or owl:AllDisjointProperties axiom.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#members.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#members")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getMembersConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#members", odase.Individual.class);
        }

        /**
         * The data property that relates every individual to every data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getTopDataPropertyConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2002/07/owl#topDataProperty", new odase.LiteralConverter());
        }

        /**
         * A description of the subject resource.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#comment.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#comment")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getCommentConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2000/01/rdf-schema#comment", new odase.LiteralConverter());
        }

        /**
         * The object property that relates every two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getTopObjectPropertyConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#topObjectProperty", odase.Individual.class);
        }

    }

    /**
     * Constructs a Rail individual with the given individual
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.Rail newRail(odase.Individual indiv) {
        return new mesea.model.TrackMaintenance.Rail(this.getModel(), indiv.getResource());
    }

    /**
     * Constructs a Rail individual with the given resource
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.Rail newRail(odase.Resource resource) {
        return new mesea.model.TrackMaintenance.Rail(this.getModel(), resource);
    }

    /**
     * Constructs a Rail individual with the given URI
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.Rail newRail(String uri) {
        return new mesea.model.TrackMaintenance.Rail(this.getModel(), new odase.rdf.URINode(uri));
    }

    /**
     * Constructs a new Rail individual with a unique URI
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.Rail newRail() {
        return new mesea.model.TrackMaintenance.Rail(this.getModel());
    }

    /**
     * Constructs a Rail individual with the given individual
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.Rail assertRail(odase.Individual indiv) {
        mesea.model.TrackMaintenance.Rail instance = new mesea.model.TrackMaintenance.Rail(this.getModel(), indiv.getResource());
        instance.assertType();
        return instance;
    }

    /**
     * Constructs a Rail individual with the given resource
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.Rail assertRail(odase.Resource resource) {
        mesea.model.TrackMaintenance.Rail instance = new mesea.model.TrackMaintenance.Rail(this.getModel(), resource);
        instance.assertType();
        return instance;
    }

    /**
     * Constructs a Rail individual with the given URI
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.Rail assertRail(String uri) {
        mesea.model.TrackMaintenance.Rail instance = new mesea.model.TrackMaintenance.Rail(this.getModel(), new odase.rdf.URINode(uri));
        instance.assertType();
        return instance;
    }

    /**
     * Constructs a new Rail individual with a unique URI
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.Rail assertRail() {
        mesea.model.TrackMaintenance.Rail instance = new mesea.model.TrackMaintenance.Rail(this.getModel());
        instance.assertType();
        return instance;
    }

    public java.util.List<mesea.model.TrackMaintenance.Rail> allRail() {
        java.util.List<odase.Resource> resources = this.getModel().getInstances("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Rail");
        java.util.List<mesea.model.TrackMaintenance.Rail> instances = new java.util.ArrayList<mesea.model.TrackMaintenance.Rail>(resources.size());
        for (odase.Resource r : resources) {
            instances.add(new mesea.model.TrackMaintenance.Rail(this.getModel(), r));
        }
        return instances;
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Track.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Track")
    public static class Track extends odase.Individual implements java.io.Serializable {

        /**
         * Constructs a new Track individual with a unique URI
         * (this does not update the underlying model).
         */
        public Track(odase.Model model) {
            super(model, new odase.rdf.URINode("urn:uuid:" + java.util.UUID.randomUUID().toString()));
        }

        /**
         * Constructs a Track individual with the given model and resource
         * (this does not update the underlying model).
         */
        public Track(odase.Model model, odase.Resource resource) {
            super(model, resource);
        }

        /**
         * Constructs a Track individual with the given individual
         * (this does not update the underlying model).
         */
        public Track(odase.Individual i) {
            super(i.getModel(), i.getResource());
        }

        /**
         * Asserts that the receiver is a member of the Track OWL class
         * (this updates the underlying model by adding an rdf:type triple).
         */
        public Track assertType() {
            getModel().addObjectPropertyValue(this.getResource(), "http://www.w3.org/1999/02/22-rdf-syntax-ns#type", new odase.rdf.URINode("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Track"));
            return this;
        }

        /**
         * The object property that does not relate any two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getBottomObjectProperty() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#bottomObjectProperty", odase.Individual.class);
        }

        /**
         * A human-readable name for the subject.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#label.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#label")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getLabel() {
            return getDatatypePropertyValues("http://www.w3.org/2000/01/rdf-schema#label", new odase.LiteralConverter());
        }

        /**
         * The property that determines that two given individuals are different.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#differentFrom.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#differentFrom")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getDifferentFrom() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#differentFrom", odase.Individual.class);
        }

        /**
         * The property that determines that two given individuals are equal.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#sameAs.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#sameAs")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getSameAs() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#sameAs", odase.Individual.class);
        }

        /**
         * The data property that does not relate any individual to any data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getBottomDataProperty() {
            return getDatatypePropertyValues("http://www.w3.org/2002/07/owl#bottomDataProperty", new odase.LiteralConverter());
        }

        /**
         * The subject is an instance of a class.
         * <p>
         * Generated for http://www.w3.org/1999/02/22-rdf-syntax-ns#type.
         */
        @odase.annotations.SourceURI("http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getType() {
            return getObjectPropertyValues("http://www.w3.org/1999/02/22-rdf-syntax-ns#type", odase.Individual.class);
        }

        /**
         * The property that determines the collection of members in either a owl:AllDifferent, owl:AllDisjointClasses or owl:AllDisjointProperties axiom.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#members.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#members")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getMembers() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#members", odase.Individual.class);
        }

        /**
         * The data property that relates every individual to every data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getTopDataProperty() {
            return getDatatypePropertyValues("http://www.w3.org/2002/07/owl#topDataProperty", new odase.LiteralConverter());
        }

        /**
         * A description of the subject resource.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#comment.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#comment")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getComment() {
            return getDatatypePropertyValues("http://www.w3.org/2000/01/rdf-schema#comment", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#composedOfRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#composedOfRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<mesea.model.TrackMaintenance.Rail> getComposedOfRail() {
            return getObjectPropertyValues("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#composedOfRail", mesea.model.TrackMaintenance.Rail.class);
        }

        /**
         * The object property that relates every two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getTopObjectProperty() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#topObjectProperty", odase.Individual.class);
        }

        /**
         * The object property that does not relate any two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getBottomObjectPropertyConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#bottomObjectProperty", odase.Individual.class);
        }

        /**
         * A human-readable name for the subject.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#label.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#label")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getLabelConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2000/01/rdf-schema#label", new odase.LiteralConverter());
        }

        /**
         * The property that determines that two given individuals are different.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#differentFrom.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#differentFrom")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getDifferentFromConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#differentFrom", odase.Individual.class);
        }

        /**
         * The property that determines that two given individuals are equal.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#sameAs.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#sameAs")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getSameAsConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#sameAs", odase.Individual.class);
        }

        /**
         * The data property that does not relate any individual to any data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getBottomDataPropertyConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2002/07/owl#bottomDataProperty", new odase.LiteralConverter());
        }

        /**
         * The subject is an instance of a class.
         * <p>
         * Generated for http://www.w3.org/1999/02/22-rdf-syntax-ns#type.
         */
        @odase.annotations.SourceURI("http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getTypeConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/1999/02/22-rdf-syntax-ns#type", odase.Individual.class);
        }

        /**
         * The property that determines the collection of members in either a owl:AllDifferent, owl:AllDisjointClasses or owl:AllDisjointProperties axiom.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#members.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#members")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getMembersConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#members", odase.Individual.class);
        }

        /**
         * The data property that relates every individual to every data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getTopDataPropertyConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2002/07/owl#topDataProperty", new odase.LiteralConverter());
        }

        /**
         * A description of the subject resource.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#comment.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#comment")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getCommentConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2000/01/rdf-schema#comment", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#composedOfRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#composedOfRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<mesea.model.TrackMaintenance.Rail>> getComposedOfRailConc() {
            return getObjectPropertyValuesConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#composedOfRail", mesea.model.TrackMaintenance.Rail.class);
        }

        /**
         * The object property that relates every two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getTopObjectPropertyConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#topObjectProperty", odase.Individual.class);
        }

    }

    /**
     * Constructs a Track individual with the given individual
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.Track newTrack(odase.Individual indiv) {
        return new mesea.model.TrackMaintenance.Track(this.getModel(), indiv.getResource());
    }

    /**
     * Constructs a Track individual with the given resource
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.Track newTrack(odase.Resource resource) {
        return new mesea.model.TrackMaintenance.Track(this.getModel(), resource);
    }

    /**
     * Constructs a Track individual with the given URI
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.Track newTrack(String uri) {
        return new mesea.model.TrackMaintenance.Track(this.getModel(), new odase.rdf.URINode(uri));
    }

    /**
     * Constructs a new Track individual with a unique URI
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.Track newTrack() {
        return new mesea.model.TrackMaintenance.Track(this.getModel());
    }

    /**
     * Constructs a Track individual with the given individual
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.Track assertTrack(odase.Individual indiv) {
        mesea.model.TrackMaintenance.Track instance = new mesea.model.TrackMaintenance.Track(this.getModel(), indiv.getResource());
        instance.assertType();
        return instance;
    }

    /**
     * Constructs a Track individual with the given resource
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.Track assertTrack(odase.Resource resource) {
        mesea.model.TrackMaintenance.Track instance = new mesea.model.TrackMaintenance.Track(this.getModel(), resource);
        instance.assertType();
        return instance;
    }

    /**
     * Constructs a Track individual with the given URI
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.Track assertTrack(String uri) {
        mesea.model.TrackMaintenance.Track instance = new mesea.model.TrackMaintenance.Track(this.getModel(), new odase.rdf.URINode(uri));
        instance.assertType();
        return instance;
    }

    /**
     * Constructs a new Track individual with a unique URI
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.Track assertTrack() {
        mesea.model.TrackMaintenance.Track instance = new mesea.model.TrackMaintenance.Track(this.getModel());
        instance.assertType();
        return instance;
    }

    public java.util.List<mesea.model.TrackMaintenance.Track> allTrack() {
        java.util.List<odase.Resource> resources = this.getModel().getInstances("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Track");
        java.util.List<mesea.model.TrackMaintenance.Track> instances = new java.util.ArrayList<mesea.model.TrackMaintenance.Track>(resources.size());
        for (odase.Resource r : resources) {
            instances.add(new mesea.model.TrackMaintenance.Track(this.getModel(), r));
        }
        return instances;
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#NominalPoint.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#NominalPoint")
    public static class NominalPoint extends odase.Individual implements java.io.Serializable {

        /**
         * Constructs a new NominalPoint individual with a unique URI
         * (this does not update the underlying model).
         */
        public NominalPoint(odase.Model model) {
            super(model, new odase.rdf.URINode("urn:uuid:" + java.util.UUID.randomUUID().toString()));
        }

        /**
         * Constructs a NominalPoint individual with the given model and resource
         * (this does not update the underlying model).
         */
        public NominalPoint(odase.Model model, odase.Resource resource) {
            super(model, resource);
        }

        /**
         * Constructs a NominalPoint individual with the given individual
         * (this does not update the underlying model).
         */
        public NominalPoint(odase.Individual i) {
            super(i.getModel(), i.getResource());
        }

        /**
         * Asserts that the receiver is a member of the NominalPoint OWL class
         * (this updates the underlying model by adding an rdf:type triple).
         */
        public NominalPoint assertType() {
            getModel().addObjectPropertyValue(this.getResource(), "http://www.w3.org/1999/02/22-rdf-syntax-ns#type", new odase.rdf.URINode("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#NominalPoint"));
            return this;
        }

        /**
         * The object property that does not relate any two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getBottomObjectProperty() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#bottomObjectProperty", odase.Individual.class);
        }

        /**
         * A human-readable name for the subject.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#label.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#label")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getLabel() {
            return getDatatypePropertyValues("http://www.w3.org/2000/01/rdf-schema#label", new odase.LiteralConverter());
        }

        /**
         * The property that determines that two given individuals are different.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#differentFrom.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#differentFrom")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getDifferentFrom() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#differentFrom", odase.Individual.class);
        }

        /**
         * The property that determines that two given individuals are equal.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#sameAs.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#sameAs")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getSameAs() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#sameAs", odase.Individual.class);
        }

        /**
         * The data property that does not relate any individual to any data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getBottomDataProperty() {
            return getDatatypePropertyValues("http://www.w3.org/2002/07/owl#bottomDataProperty", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Measurement getPrecededByMeasurement() {
            return getFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Rail getIsMeasurementForRail() {
            return getFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail", mesea.model.TrackMaintenance.Rail.class);
        }

        /**
         * The subject is an instance of a class.
         * <p>
         * Generated for http://www.w3.org/1999/02/22-rdf-syntax-ns#type.
         */
        @odase.annotations.SourceURI("http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getType() {
            return getObjectPropertyValues("http://www.w3.org/1999/02/22-rdf-syntax-ns#type", odase.Individual.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Measurement getFollowedByMeasurement() {
            return getFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * The property that determines the collection of members in either a owl:AllDifferent, owl:AllDisjointClasses or owl:AllDisjointProperties axiom.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#members.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#members")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getMembers() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#members", odase.Individual.class);
        }

        /**
         * The data property that relates every individual to every data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getTopDataProperty() {
            return getDatatypePropertyValues("http://www.w3.org/2002/07/owl#topDataProperty", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Rail getIsDegradationPointForRail() {
            return getFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail", mesea.model.TrackMaintenance.Rail.class);
        }

        /**
         * A description of the subject resource.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#comment.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#comment")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getComment() {
            return getDatatypePropertyValues("http://www.w3.org/2000/01/rdf-schema#comment", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public java.lang.Float getPosition() {
            return getFunctionalDatatypePropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"));
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public java.lang.Float getDeviationValue() {
            return getFunctionalDatatypePropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"));
        }

        /**
         * The object property that relates every two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getTopObjectProperty() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#topObjectProperty", odase.Individual.class);
        }

        /**
         * The object property that does not relate any two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getBottomObjectPropertyConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#bottomObjectProperty", odase.Individual.class);
        }

        /**
         * A human-readable name for the subject.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#label.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#label")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getLabelConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2000/01/rdf-schema#label", new odase.LiteralConverter());
        }

        /**
         * The property that determines that two given individuals are different.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#differentFrom.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#differentFrom")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getDifferentFromConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#differentFrom", odase.Individual.class);
        }

        /**
         * The property that determines that two given individuals are equal.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#sameAs.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#sameAs")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getSameAsConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#sameAs", odase.Individual.class);
        }

        /**
         * The data property that does not relate any individual to any data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getBottomDataPropertyConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2002/07/owl#bottomDataProperty", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<mesea.model.TrackMaintenance.Measurement> getPrecededByMeasurementConc() {
            return getFunctionalObjectPropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<mesea.model.TrackMaintenance.Rail> getIsMeasurementForRailConc() {
            return getFunctionalObjectPropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail", mesea.model.TrackMaintenance.Rail.class);
        }

        /**
         * The subject is an instance of a class.
         * <p>
         * Generated for http://www.w3.org/1999/02/22-rdf-syntax-ns#type.
         */
        @odase.annotations.SourceURI("http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getTypeConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/1999/02/22-rdf-syntax-ns#type", odase.Individual.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<mesea.model.TrackMaintenance.Measurement> getFollowedByMeasurementConc() {
            return getFunctionalObjectPropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * The property that determines the collection of members in either a owl:AllDifferent, owl:AllDisjointClasses or owl:AllDisjointProperties axiom.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#members.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#members")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getMembersConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#members", odase.Individual.class);
        }

        /**
         * The data property that relates every individual to every data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getTopDataPropertyConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2002/07/owl#topDataProperty", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<mesea.model.TrackMaintenance.Rail> getIsDegradationPointForRailConc() {
            return getFunctionalObjectPropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail", mesea.model.TrackMaintenance.Rail.class);
        }

        /**
         * A description of the subject resource.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#comment.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#comment")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getCommentConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2000/01/rdf-schema#comment", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<java.lang.Float> getPositionConc() {
            return getFunctionalDatatypePropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"));
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<java.lang.Float> getDeviationValueConc() {
            return getFunctionalDatatypePropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"));
        }

        /**
         * The object property that relates every two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getTopObjectPropertyConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#topObjectProperty", odase.Individual.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.NominalPoint setPrecededByMeasurement(mesea.model.TrackMaintenance.Measurement value) {
            setFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement", value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.NominalPoint setIsMeasurementForRail(mesea.model.TrackMaintenance.Rail value) {
            setFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail", value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.NominalPoint setFollowedByMeasurement(mesea.model.TrackMaintenance.Measurement value) {
            setFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement", value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.NominalPoint setIsDegradationPointForRail(mesea.model.TrackMaintenance.Rail value) {
            setFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail", value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.NominalPoint setPosition(java.lang.Float value) {
            setFunctionalDatatypePropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"), value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.NominalPoint setDeviationValue(java.lang.Float value) {
            setFunctionalDatatypePropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"), value);
            return this;
        }

        /**
         * Returns the current individual as an individual of the Measurement superclass.
         */
        public mesea.model.TrackMaintenance.Measurement asMeasurement() {
            return new mesea.model.TrackMaintenance.Measurement(this);
        }

        /**
         * Returns the current individual as an individual of the DegradationPoint superclass.
         */
        public mesea.model.TrackMaintenance.DegradationPoint asDegradationPoint() {
            return new mesea.model.TrackMaintenance.DegradationPoint(this);
        }

    }

    /**
     * Constructs a NominalPoint individual with the given individual
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.NominalPoint newNominalPoint(odase.Individual indiv) {
        return new mesea.model.TrackMaintenance.NominalPoint(this.getModel(), indiv.getResource());
    }

    /**
     * Constructs a NominalPoint individual with the given resource
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.NominalPoint newNominalPoint(odase.Resource resource) {
        return new mesea.model.TrackMaintenance.NominalPoint(this.getModel(), resource);
    }

    /**
     * Constructs a NominalPoint individual with the given URI
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.NominalPoint newNominalPoint(String uri) {
        return new mesea.model.TrackMaintenance.NominalPoint(this.getModel(), new odase.rdf.URINode(uri));
    }

    /**
     * Constructs a new NominalPoint individual with a unique URI
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.NominalPoint newNominalPoint() {
        return new mesea.model.TrackMaintenance.NominalPoint(this.getModel());
    }

    /**
     * Constructs a NominalPoint individual with the given individual
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.NominalPoint assertNominalPoint(odase.Individual indiv) {
        mesea.model.TrackMaintenance.NominalPoint instance = new mesea.model.TrackMaintenance.NominalPoint(this.getModel(), indiv.getResource());
        instance.assertType();
        return instance;
    }

    /**
     * Constructs a NominalPoint individual with the given resource
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.NominalPoint assertNominalPoint(odase.Resource resource) {
        mesea.model.TrackMaintenance.NominalPoint instance = new mesea.model.TrackMaintenance.NominalPoint(this.getModel(), resource);
        instance.assertType();
        return instance;
    }

    /**
     * Constructs a NominalPoint individual with the given URI
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.NominalPoint assertNominalPoint(String uri) {
        mesea.model.TrackMaintenance.NominalPoint instance = new mesea.model.TrackMaintenance.NominalPoint(this.getModel(), new odase.rdf.URINode(uri));
        instance.assertType();
        return instance;
    }

    /**
     * Constructs a new NominalPoint individual with a unique URI
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.NominalPoint assertNominalPoint() {
        mesea.model.TrackMaintenance.NominalPoint instance = new mesea.model.TrackMaintenance.NominalPoint(this.getModel());
        instance.assertType();
        return instance;
    }

    public java.util.List<mesea.model.TrackMaintenance.NominalPoint> allNominalPoint() {
        java.util.List<odase.Resource> resources = this.getModel().getInstances("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#NominalPoint");
        java.util.List<mesea.model.TrackMaintenance.NominalPoint> instances = new java.util.ArrayList<mesea.model.TrackMaintenance.NominalPoint>(resources.size());
        for (odase.Resource r : resources) {
            instances.add(new mesea.model.TrackMaintenance.NominalPoint(this.getModel(), r));
        }
        return instances;
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#SlowdownPoint.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#SlowdownPoint")
    public static class SlowdownPoint extends odase.Individual implements java.io.Serializable {

        /**
         * Constructs a new SlowdownPoint individual with a unique URI
         * (this does not update the underlying model).
         */
        public SlowdownPoint(odase.Model model) {
            super(model, new odase.rdf.URINode("urn:uuid:" + java.util.UUID.randomUUID().toString()));
        }

        /**
         * Constructs a SlowdownPoint individual with the given model and resource
         * (this does not update the underlying model).
         */
        public SlowdownPoint(odase.Model model, odase.Resource resource) {
            super(model, resource);
        }

        /**
         * Constructs a SlowdownPoint individual with the given individual
         * (this does not update the underlying model).
         */
        public SlowdownPoint(odase.Individual i) {
            super(i.getModel(), i.getResource());
        }

        /**
         * Asserts that the receiver is a member of the SlowdownPoint OWL class
         * (this updates the underlying model by adding an rdf:type triple).
         */
        public SlowdownPoint assertType() {
            getModel().addObjectPropertyValue(this.getResource(), "http://www.w3.org/1999/02/22-rdf-syntax-ns#type", new odase.rdf.URINode("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#SlowdownPoint"));
            return this;
        }

        /**
         * The object property that does not relate any two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getBottomObjectProperty() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#bottomObjectProperty", odase.Individual.class);
        }

        /**
         * A human-readable name for the subject.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#label.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#label")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getLabel() {
            return getDatatypePropertyValues("http://www.w3.org/2000/01/rdf-schema#label", new odase.LiteralConverter());
        }

        /**
         * The property that determines that two given individuals are different.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#differentFrom.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#differentFrom")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getDifferentFrom() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#differentFrom", odase.Individual.class);
        }

        /**
         * The property that determines that two given individuals are equal.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#sameAs.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#sameAs")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getSameAs() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#sameAs", odase.Individual.class);
        }

        /**
         * The data property that does not relate any individual to any data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getBottomDataProperty() {
            return getDatatypePropertyValues("http://www.w3.org/2002/07/owl#bottomDataProperty", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Measurement getPrecededByMeasurement() {
            return getFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Rail getIsMeasurementForRail() {
            return getFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail", mesea.model.TrackMaintenance.Rail.class);
        }

        /**
         * The subject is an instance of a class.
         * <p>
         * Generated for http://www.w3.org/1999/02/22-rdf-syntax-ns#type.
         */
        @odase.annotations.SourceURI("http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getType() {
            return getObjectPropertyValues("http://www.w3.org/1999/02/22-rdf-syntax-ns#type", odase.Individual.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Measurement getFollowedByMeasurement() {
            return getFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * The property that determines the collection of members in either a owl:AllDifferent, owl:AllDisjointClasses or owl:AllDisjointProperties axiom.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#members.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#members")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getMembers() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#members", odase.Individual.class);
        }

        /**
         * The data property that relates every individual to every data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getTopDataProperty() {
            return getDatatypePropertyValues("http://www.w3.org/2002/07/owl#topDataProperty", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Rail getIsDegradationPointForRail() {
            return getFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail", mesea.model.TrackMaintenance.Rail.class);
        }

        /**
         * A description of the subject resource.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#comment.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#comment")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getComment() {
            return getDatatypePropertyValues("http://www.w3.org/2000/01/rdf-schema#comment", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public java.lang.Float getPosition() {
            return getFunctionalDatatypePropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"));
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public java.lang.Float getDeviationValue() {
            return getFunctionalDatatypePropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"));
        }

        /**
         * The object property that relates every two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getTopObjectProperty() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#topObjectProperty", odase.Individual.class);
        }

        /**
         * The object property that does not relate any two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getBottomObjectPropertyConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#bottomObjectProperty", odase.Individual.class);
        }

        /**
         * A human-readable name for the subject.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#label.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#label")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getLabelConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2000/01/rdf-schema#label", new odase.LiteralConverter());
        }

        /**
         * The property that determines that two given individuals are different.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#differentFrom.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#differentFrom")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getDifferentFromConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#differentFrom", odase.Individual.class);
        }

        /**
         * The property that determines that two given individuals are equal.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#sameAs.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#sameAs")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getSameAsConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#sameAs", odase.Individual.class);
        }

        /**
         * The data property that does not relate any individual to any data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getBottomDataPropertyConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2002/07/owl#bottomDataProperty", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<mesea.model.TrackMaintenance.Measurement> getPrecededByMeasurementConc() {
            return getFunctionalObjectPropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<mesea.model.TrackMaintenance.Rail> getIsMeasurementForRailConc() {
            return getFunctionalObjectPropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail", mesea.model.TrackMaintenance.Rail.class);
        }

        /**
         * The subject is an instance of a class.
         * <p>
         * Generated for http://www.w3.org/1999/02/22-rdf-syntax-ns#type.
         */
        @odase.annotations.SourceURI("http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getTypeConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/1999/02/22-rdf-syntax-ns#type", odase.Individual.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<mesea.model.TrackMaintenance.Measurement> getFollowedByMeasurementConc() {
            return getFunctionalObjectPropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * The property that determines the collection of members in either a owl:AllDifferent, owl:AllDisjointClasses or owl:AllDisjointProperties axiom.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#members.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#members")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getMembersConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#members", odase.Individual.class);
        }

        /**
         * The data property that relates every individual to every data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getTopDataPropertyConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2002/07/owl#topDataProperty", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<mesea.model.TrackMaintenance.Rail> getIsDegradationPointForRailConc() {
            return getFunctionalObjectPropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail", mesea.model.TrackMaintenance.Rail.class);
        }

        /**
         * A description of the subject resource.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#comment.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#comment")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getCommentConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2000/01/rdf-schema#comment", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<java.lang.Float> getPositionConc() {
            return getFunctionalDatatypePropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"));
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<java.lang.Float> getDeviationValueConc() {
            return getFunctionalDatatypePropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"));
        }

        /**
         * The object property that relates every two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getTopObjectPropertyConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#topObjectProperty", odase.Individual.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.SlowdownPoint setPrecededByMeasurement(mesea.model.TrackMaintenance.Measurement value) {
            setFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement", value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.SlowdownPoint setIsMeasurementForRail(mesea.model.TrackMaintenance.Rail value) {
            setFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail", value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.SlowdownPoint setFollowedByMeasurement(mesea.model.TrackMaintenance.Measurement value) {
            setFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement", value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.SlowdownPoint setIsDegradationPointForRail(mesea.model.TrackMaintenance.Rail value) {
            setFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail", value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.SlowdownPoint setPosition(java.lang.Float value) {
            setFunctionalDatatypePropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"), value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.SlowdownPoint setDeviationValue(java.lang.Float value) {
            setFunctionalDatatypePropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"), value);
            return this;
        }

        /**
         * Returns the current individual as an individual of the Measurement superclass.
         */
        public mesea.model.TrackMaintenance.Measurement asMeasurement() {
            return new mesea.model.TrackMaintenance.Measurement(this);
        }

        /**
         * Returns the current individual as an individual of the DegradationPoint superclass.
         */
        public mesea.model.TrackMaintenance.DegradationPoint asDegradationPoint() {
            return new mesea.model.TrackMaintenance.DegradationPoint(this);
        }

    }

    /**
     * Constructs a SlowdownPoint individual with the given individual
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.SlowdownPoint newSlowdownPoint(odase.Individual indiv) {
        return new mesea.model.TrackMaintenance.SlowdownPoint(this.getModel(), indiv.getResource());
    }

    /**
     * Constructs a SlowdownPoint individual with the given resource
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.SlowdownPoint newSlowdownPoint(odase.Resource resource) {
        return new mesea.model.TrackMaintenance.SlowdownPoint(this.getModel(), resource);
    }

    /**
     * Constructs a SlowdownPoint individual with the given URI
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.SlowdownPoint newSlowdownPoint(String uri) {
        return new mesea.model.TrackMaintenance.SlowdownPoint(this.getModel(), new odase.rdf.URINode(uri));
    }

    /**
     * Constructs a new SlowdownPoint individual with a unique URI
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.SlowdownPoint newSlowdownPoint() {
        return new mesea.model.TrackMaintenance.SlowdownPoint(this.getModel());
    }

    /**
     * Constructs a SlowdownPoint individual with the given individual
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.SlowdownPoint assertSlowdownPoint(odase.Individual indiv) {
        mesea.model.TrackMaintenance.SlowdownPoint instance = new mesea.model.TrackMaintenance.SlowdownPoint(this.getModel(), indiv.getResource());
        instance.assertType();
        return instance;
    }

    /**
     * Constructs a SlowdownPoint individual with the given resource
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.SlowdownPoint assertSlowdownPoint(odase.Resource resource) {
        mesea.model.TrackMaintenance.SlowdownPoint instance = new mesea.model.TrackMaintenance.SlowdownPoint(this.getModel(), resource);
        instance.assertType();
        return instance;
    }

    /**
     * Constructs a SlowdownPoint individual with the given URI
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.SlowdownPoint assertSlowdownPoint(String uri) {
        mesea.model.TrackMaintenance.SlowdownPoint instance = new mesea.model.TrackMaintenance.SlowdownPoint(this.getModel(), new odase.rdf.URINode(uri));
        instance.assertType();
        return instance;
    }

    /**
     * Constructs a new SlowdownPoint individual with a unique URI
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.SlowdownPoint assertSlowdownPoint() {
        mesea.model.TrackMaintenance.SlowdownPoint instance = new mesea.model.TrackMaintenance.SlowdownPoint(this.getModel());
        instance.assertType();
        return instance;
    }

    public java.util.List<mesea.model.TrackMaintenance.SlowdownPoint> allSlowdownPoint() {
        java.util.List<odase.Resource> resources = this.getModel().getInstances("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#SlowdownPoint");
        java.util.List<mesea.model.TrackMaintenance.SlowdownPoint> instances = new java.util.ArrayList<mesea.model.TrackMaintenance.SlowdownPoint>(resources.size());
        for (odase.Resource r : resources) {
            instances.add(new mesea.model.TrackMaintenance.SlowdownPoint(this.getModel(), r));
        }
        return instances;
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#AlertPoint.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#AlertPoint")
    public static class AlertPoint extends odase.Individual implements java.io.Serializable {

        /**
         * Constructs a new AlertPoint individual with a unique URI
         * (this does not update the underlying model).
         */
        public AlertPoint(odase.Model model) {
            super(model, new odase.rdf.URINode("urn:uuid:" + java.util.UUID.randomUUID().toString()));
        }

        /**
         * Constructs a AlertPoint individual with the given model and resource
         * (this does not update the underlying model).
         */
        public AlertPoint(odase.Model model, odase.Resource resource) {
            super(model, resource);
        }

        /**
         * Constructs a AlertPoint individual with the given individual
         * (this does not update the underlying model).
         */
        public AlertPoint(odase.Individual i) {
            super(i.getModel(), i.getResource());
        }

        /**
         * Asserts that the receiver is a member of the AlertPoint OWL class
         * (this updates the underlying model by adding an rdf:type triple).
         */
        public AlertPoint assertType() {
            getModel().addObjectPropertyValue(this.getResource(), "http://www.w3.org/1999/02/22-rdf-syntax-ns#type", new odase.rdf.URINode("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#AlertPoint"));
            return this;
        }

        /**
         * The object property that does not relate any two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getBottomObjectProperty() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#bottomObjectProperty", odase.Individual.class);
        }

        /**
         * A human-readable name for the subject.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#label.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#label")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getLabel() {
            return getDatatypePropertyValues("http://www.w3.org/2000/01/rdf-schema#label", new odase.LiteralConverter());
        }

        /**
         * The property that determines that two given individuals are different.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#differentFrom.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#differentFrom")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getDifferentFrom() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#differentFrom", odase.Individual.class);
        }

        /**
         * The property that determines that two given individuals are equal.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#sameAs.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#sameAs")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getSameAs() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#sameAs", odase.Individual.class);
        }

        /**
         * The data property that does not relate any individual to any data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getBottomDataProperty() {
            return getDatatypePropertyValues("http://www.w3.org/2002/07/owl#bottomDataProperty", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Measurement getPrecededByMeasurement() {
            return getFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Rail getIsMeasurementForRail() {
            return getFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail", mesea.model.TrackMaintenance.Rail.class);
        }

        /**
         * The subject is an instance of a class.
         * <p>
         * Generated for http://www.w3.org/1999/02/22-rdf-syntax-ns#type.
         */
        @odase.annotations.SourceURI("http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getType() {
            return getObjectPropertyValues("http://www.w3.org/1999/02/22-rdf-syntax-ns#type", odase.Individual.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Measurement getFollowedByMeasurement() {
            return getFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * The property that determines the collection of members in either a owl:AllDifferent, owl:AllDisjointClasses or owl:AllDisjointProperties axiom.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#members.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#members")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getMembers() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#members", odase.Individual.class);
        }

        /**
         * The data property that relates every individual to every data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getTopDataProperty() {
            return getDatatypePropertyValues("http://www.w3.org/2002/07/owl#topDataProperty", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.Rail getIsDegradationPointForRail() {
            return getFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail", mesea.model.TrackMaintenance.Rail.class);
        }

        /**
         * A description of the subject resource.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#comment.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#comment")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Literal> getComment() {
            return getDatatypePropertyValues("http://www.w3.org/2000/01/rdf-schema#comment", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public java.lang.Float getPosition() {
            return getFunctionalDatatypePropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"));
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public java.lang.Float getDeviationValue() {
            return getFunctionalDatatypePropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"));
        }

        /**
         * The object property that relates every two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public java.util.Collection<odase.Individual> getTopObjectProperty() {
            return getObjectPropertyValues("http://www.w3.org/2002/07/owl#topObjectProperty", odase.Individual.class);
        }

        /**
         * The object property that does not relate any two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getBottomObjectPropertyConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#bottomObjectProperty", odase.Individual.class);
        }

        /**
         * A human-readable name for the subject.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#label.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#label")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getLabelConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2000/01/rdf-schema#label", new odase.LiteralConverter());
        }

        /**
         * The property that determines that two given individuals are different.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#differentFrom.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#differentFrom")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getDifferentFromConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#differentFrom", odase.Individual.class);
        }

        /**
         * The property that determines that two given individuals are equal.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#sameAs.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#sameAs")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getSameAsConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#sameAs", odase.Individual.class);
        }

        /**
         * The data property that does not relate any individual to any data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#bottomDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#bottomDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getBottomDataPropertyConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2002/07/owl#bottomDataProperty", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<mesea.model.TrackMaintenance.Measurement> getPrecededByMeasurementConc() {
            return getFunctionalObjectPropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<mesea.model.TrackMaintenance.Rail> getIsMeasurementForRailConc() {
            return getFunctionalObjectPropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail", mesea.model.TrackMaintenance.Rail.class);
        }

        /**
         * The subject is an instance of a class.
         * <p>
         * Generated for http://www.w3.org/1999/02/22-rdf-syntax-ns#type.
         */
        @odase.annotations.SourceURI("http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getTypeConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/1999/02/22-rdf-syntax-ns#type", odase.Individual.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<mesea.model.TrackMaintenance.Measurement> getFollowedByMeasurementConc() {
            return getFunctionalObjectPropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement", mesea.model.TrackMaintenance.Measurement.class);
        }

        /**
         * The property that determines the collection of members in either a owl:AllDifferent, owl:AllDisjointClasses or owl:AllDisjointProperties axiom.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#members.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#members")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getMembersConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#members", odase.Individual.class);
        }

        /**
         * The data property that relates every individual to every data value.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topDataProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topDataProperty")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getTopDataPropertyConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2002/07/owl#topDataProperty", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<mesea.model.TrackMaintenance.Rail> getIsDegradationPointForRailConc() {
            return getFunctionalObjectPropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail", mesea.model.TrackMaintenance.Rail.class);
        }

        /**
         * A description of the subject resource.
         * <p>
         * Generated for http://www.w3.org/2000/01/rdf-schema#comment.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2000/01/rdf-schema#comment")
        @odase.annotations.RangeClass(odase.Literal.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Literal>> getCommentConc() {
            return getDatatypePropertyValuesConc("http://www.w3.org/2000/01/rdf-schema#comment", new odase.LiteralConverter());
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<java.lang.Float> getPositionConc() {
            return getFunctionalDatatypePropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"));
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public odase.concurrency.OdaseFuture<java.lang.Float> getDeviationValueConc() {
            return getFunctionalDatatypePropertyValueConc("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"));
        }

        /**
         * The object property that relates every two individuals.
         * <p>
         * Generated for http://www.w3.org/2002/07/owl#topObjectProperty.
         */
        @odase.annotations.SourceURI("http://www.w3.org/2002/07/owl#topObjectProperty")
        @odase.annotations.RangeClass(odase.Individual.class)
        @odase.annotations.Cardinality(max = java.lang.Integer.MAX_VALUE, min = 0)
        public odase.concurrency.OdaseFuture<java.util.Collection<odase.Individual>> getTopObjectPropertyConc() {
            return getObjectPropertyValuesConc("http://www.w3.org/2002/07/owl#topObjectProperty", odase.Individual.class);
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.AlertPoint setPrecededByMeasurement(mesea.model.TrackMaintenance.Measurement value) {
            setFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement", value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.AlertPoint setIsMeasurementForRail(mesea.model.TrackMaintenance.Rail value) {
            setFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail", value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Measurement.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.AlertPoint setFollowedByMeasurement(mesea.model.TrackMaintenance.Measurement value) {
            setFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement", value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail")
        @odase.annotations.RangeClass(mesea.model.TrackMaintenance.Rail.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.AlertPoint setIsDegradationPointForRail(mesea.model.TrackMaintenance.Rail value) {
            setFunctionalObjectPropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail", value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.AlertPoint setPosition(java.lang.Float value) {
            setFunctionalDatatypePropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"), value);
            return this;
        }

        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue.
         */
        @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue")
        @odase.annotations.RangeClass(java.lang.Float.class)
        @odase.annotations.Cardinality(max = 1, min = 0)
        public mesea.model.TrackMaintenance.AlertPoint setDeviationValue(java.lang.Float value) {
            setFunctionalDatatypePropertyValue("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue", new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float"), value);
            return this;
        }

        /**
         * Returns the current individual as an individual of the Measurement superclass.
         */
        public mesea.model.TrackMaintenance.Measurement asMeasurement() {
            return new mesea.model.TrackMaintenance.Measurement(this);
        }

        /**
         * Returns the current individual as an individual of the DegradationPoint superclass.
         */
        public mesea.model.TrackMaintenance.DegradationPoint asDegradationPoint() {
            return new mesea.model.TrackMaintenance.DegradationPoint(this);
        }

    }

    /**
     * Constructs a AlertPoint individual with the given individual
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.AlertPoint newAlertPoint(odase.Individual indiv) {
        return new mesea.model.TrackMaintenance.AlertPoint(this.getModel(), indiv.getResource());
    }

    /**
     * Constructs a AlertPoint individual with the given resource
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.AlertPoint newAlertPoint(odase.Resource resource) {
        return new mesea.model.TrackMaintenance.AlertPoint(this.getModel(), resource);
    }

    /**
     * Constructs a AlertPoint individual with the given URI
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.AlertPoint newAlertPoint(String uri) {
        return new mesea.model.TrackMaintenance.AlertPoint(this.getModel(), new odase.rdf.URINode(uri));
    }

    /**
     * Constructs a new AlertPoint individual with a unique URI
     * (this does not update the underlying model).
     */
    public mesea.model.TrackMaintenance.AlertPoint newAlertPoint() {
        return new mesea.model.TrackMaintenance.AlertPoint(this.getModel());
    }

    /**
     * Constructs a AlertPoint individual with the given individual
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.AlertPoint assertAlertPoint(odase.Individual indiv) {
        mesea.model.TrackMaintenance.AlertPoint instance = new mesea.model.TrackMaintenance.AlertPoint(this.getModel(), indiv.getResource());
        instance.assertType();
        return instance;
    }

    /**
     * Constructs a AlertPoint individual with the given resource
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.AlertPoint assertAlertPoint(odase.Resource resource) {
        mesea.model.TrackMaintenance.AlertPoint instance = new mesea.model.TrackMaintenance.AlertPoint(this.getModel(), resource);
        instance.assertType();
        return instance;
    }

    /**
     * Constructs a AlertPoint individual with the given URI
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.AlertPoint assertAlertPoint(String uri) {
        mesea.model.TrackMaintenance.AlertPoint instance = new mesea.model.TrackMaintenance.AlertPoint(this.getModel(), new odase.rdf.URINode(uri));
        instance.assertType();
        return instance;
    }

    /**
     * Constructs a new AlertPoint individual with a unique URI
     * and updates the underlying model by adding an rdf:type triple.
     */
    public mesea.model.TrackMaintenance.AlertPoint assertAlertPoint() {
        mesea.model.TrackMaintenance.AlertPoint instance = new mesea.model.TrackMaintenance.AlertPoint(this.getModel());
        instance.assertType();
        return instance;
    }

    public java.util.List<mesea.model.TrackMaintenance.AlertPoint> allAlertPoint() {
        java.util.List<odase.Resource> resources = this.getModel().getInstances("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#AlertPoint");
        java.util.List<mesea.model.TrackMaintenance.AlertPoint> instances = new java.util.ArrayList<mesea.model.TrackMaintenance.AlertPoint>(resources.size());
        for (odase.Resource r : resources) {
            instances.add(new mesea.model.TrackMaintenance.AlertPoint(this.getModel(), r));
        }
        return instances;
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Measurement.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Measurement")
    public static odase.swrl.SwrlAtom Measurement(odase.rdf.RdfTerm arg) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(1);
        args.add(arg);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlClass("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Measurement"), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Measurement.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Measurement")
    public static odase.swrl.SwrlAtom Measurement(odase.Individual arg) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(1);
        args.add(arg.getResource());
        return new odase.swrl.SwrlAtom(new odase.owl.OwlClass("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Measurement"), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#DegradationPoint.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#DegradationPoint")
    public static odase.swrl.SwrlAtom DegradationPoint(odase.rdf.RdfTerm arg) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(1);
        args.add(arg);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlClass("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#DegradationPoint"), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#DegradationPoint.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#DegradationPoint")
    public static odase.swrl.SwrlAtom DegradationPoint(odase.Individual arg) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(1);
        args.add(arg.getResource());
        return new odase.swrl.SwrlAtom(new odase.owl.OwlClass("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#DegradationPoint"), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#InterventionPoint.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#InterventionPoint")
    public static odase.swrl.SwrlAtom InterventionPoint(odase.rdf.RdfTerm arg) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(1);
        args.add(arg);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlClass("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#InterventionPoint"), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#InterventionPoint.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#InterventionPoint")
    public static odase.swrl.SwrlAtom InterventionPoint(odase.Individual arg) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(1);
        args.add(arg.getResource());
        return new odase.swrl.SwrlAtom(new odase.owl.OwlClass("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#InterventionPoint"), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Rail.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Rail")
    public static odase.swrl.SwrlAtom Rail(odase.rdf.RdfTerm arg) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(1);
        args.add(arg);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlClass("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Rail"), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Rail.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Rail")
    public static odase.swrl.SwrlAtom Rail(odase.Individual arg) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(1);
        args.add(arg.getResource());
        return new odase.swrl.SwrlAtom(new odase.owl.OwlClass("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Rail"), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Track.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Track")
    public static odase.swrl.SwrlAtom Track(odase.rdf.RdfTerm arg) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(1);
        args.add(arg);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlClass("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Track"), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Track.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Track")
    public static odase.swrl.SwrlAtom Track(odase.Individual arg) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(1);
        args.add(arg.getResource());
        return new odase.swrl.SwrlAtom(new odase.owl.OwlClass("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Track"), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#NominalPoint.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#NominalPoint")
    public static odase.swrl.SwrlAtom NominalPoint(odase.rdf.RdfTerm arg) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(1);
        args.add(arg);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlClass("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#NominalPoint"), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#NominalPoint.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#NominalPoint")
    public static odase.swrl.SwrlAtom NominalPoint(odase.Individual arg) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(1);
        args.add(arg.getResource());
        return new odase.swrl.SwrlAtom(new odase.owl.OwlClass("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#NominalPoint"), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#SlowdownPoint.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#SlowdownPoint")
    public static odase.swrl.SwrlAtom SlowdownPoint(odase.rdf.RdfTerm arg) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(1);
        args.add(arg);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlClass("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#SlowdownPoint"), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#SlowdownPoint.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#SlowdownPoint")
    public static odase.swrl.SwrlAtom SlowdownPoint(odase.Individual arg) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(1);
        args.add(arg.getResource());
        return new odase.swrl.SwrlAtom(new odase.owl.OwlClass("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#SlowdownPoint"), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#AlertPoint.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#AlertPoint")
    public static odase.swrl.SwrlAtom AlertPoint(odase.rdf.RdfTerm arg) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(1);
        args.add(arg);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlClass("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#AlertPoint"), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#AlertPoint.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#AlertPoint")
    public static odase.swrl.SwrlAtom AlertPoint(odase.Individual arg) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(1);
        args.add(arg.getResource());
        return new odase.swrl.SwrlAtom(new odase.owl.OwlClass("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#AlertPoint"), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasDegradationPoint.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasDegradationPoint")
    public static odase.swrl.SwrlAtom hasDegradationPoint(odase.rdf.RdfTerm arg1, odase.rdf.RdfTerm arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1);
        args.add(arg2);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasDegradationPoint", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasDegradationPoint.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasDegradationPoint")
    public static odase.swrl.SwrlAtom hasDegradationPoint(odase.Individual arg1, odase.rdf.RdfTerm arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1.getResource());
        args.add(arg2);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasDegradationPoint", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasDegradationPoint.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasDegradationPoint")
    public static odase.swrl.SwrlAtom hasDegradationPoint(odase.rdf.RdfTerm arg1, odase.Individual arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1);
        args.add(arg2.getResource());
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasDegradationPoint", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasDegradationPoint.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasDegradationPoint")
    public static odase.swrl.SwrlAtom hasDegradationPoint(odase.Individual arg1, odase.Individual arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1.getResource());
        args.add(arg2.getResource());
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasDegradationPoint", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement")
    public static odase.swrl.SwrlAtom precededByMeasurement(odase.rdf.RdfTerm arg1, odase.rdf.RdfTerm arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1);
        args.add(arg2);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement")
    public static odase.swrl.SwrlAtom precededByMeasurement(odase.Individual arg1, odase.rdf.RdfTerm arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1.getResource());
        args.add(arg2);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement")
    public static odase.swrl.SwrlAtom precededByMeasurement(odase.rdf.RdfTerm arg1, odase.Individual arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1);
        args.add(arg2.getResource());
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement")
    public static odase.swrl.SwrlAtom precededByMeasurement(odase.Individual arg1, odase.Individual arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1.getResource());
        args.add(arg2.getResource());
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail")
    public static odase.swrl.SwrlAtom isMeasurementForRail(odase.rdf.RdfTerm arg1, odase.rdf.RdfTerm arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1);
        args.add(arg2);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail")
    public static odase.swrl.SwrlAtom isMeasurementForRail(odase.Individual arg1, odase.rdf.RdfTerm arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1.getResource());
        args.add(arg2);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail")
    public static odase.swrl.SwrlAtom isMeasurementForRail(odase.rdf.RdfTerm arg1, odase.Individual arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1);
        args.add(arg2.getResource());
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail")
    public static odase.swrl.SwrlAtom isMeasurementForRail(odase.Individual arg1, odase.Individual arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1.getResource());
        args.add(arg2.getResource());
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement")
    public static odase.swrl.SwrlAtom followedByMeasurement(odase.rdf.RdfTerm arg1, odase.rdf.RdfTerm arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1);
        args.add(arg2);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement")
    public static odase.swrl.SwrlAtom followedByMeasurement(odase.Individual arg1, odase.rdf.RdfTerm arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1.getResource());
        args.add(arg2);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement")
    public static odase.swrl.SwrlAtom followedByMeasurement(odase.rdf.RdfTerm arg1, odase.Individual arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1);
        args.add(arg2.getResource());
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement")
    public static odase.swrl.SwrlAtom followedByMeasurement(odase.Individual arg1, odase.Individual arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1.getResource());
        args.add(arg2.getResource());
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isRailForTrack.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isRailForTrack")
    public static odase.swrl.SwrlAtom isRailForTrack(odase.rdf.RdfTerm arg1, odase.rdf.RdfTerm arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1);
        args.add(arg2);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isRailForTrack", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isRailForTrack.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isRailForTrack")
    public static odase.swrl.SwrlAtom isRailForTrack(odase.Individual arg1, odase.rdf.RdfTerm arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1.getResource());
        args.add(arg2);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isRailForTrack", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isRailForTrack.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isRailForTrack")
    public static odase.swrl.SwrlAtom isRailForTrack(odase.rdf.RdfTerm arg1, odase.Individual arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1);
        args.add(arg2.getResource());
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isRailForTrack", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isRailForTrack.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isRailForTrack")
    public static odase.swrl.SwrlAtom isRailForTrack(odase.Individual arg1, odase.Individual arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1.getResource());
        args.add(arg2.getResource());
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isRailForTrack", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasMeasurement.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasMeasurement")
    public static odase.swrl.SwrlAtom hasMeasurement(odase.rdf.RdfTerm arg1, odase.rdf.RdfTerm arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1);
        args.add(arg2);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasMeasurement", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasMeasurement.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasMeasurement")
    public static odase.swrl.SwrlAtom hasMeasurement(odase.Individual arg1, odase.rdf.RdfTerm arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1.getResource());
        args.add(arg2);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasMeasurement", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasMeasurement.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasMeasurement")
    public static odase.swrl.SwrlAtom hasMeasurement(odase.rdf.RdfTerm arg1, odase.Individual arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1);
        args.add(arg2.getResource());
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasMeasurement", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasMeasurement.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasMeasurement")
    public static odase.swrl.SwrlAtom hasMeasurement(odase.Individual arg1, odase.Individual arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1.getResource());
        args.add(arg2.getResource());
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasMeasurement", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail")
    public static odase.swrl.SwrlAtom isDegradationPointForRail(odase.rdf.RdfTerm arg1, odase.rdf.RdfTerm arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1);
        args.add(arg2);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail")
    public static odase.swrl.SwrlAtom isDegradationPointForRail(odase.Individual arg1, odase.rdf.RdfTerm arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1.getResource());
        args.add(arg2);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail")
    public static odase.swrl.SwrlAtom isDegradationPointForRail(odase.rdf.RdfTerm arg1, odase.Individual arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1);
        args.add(arg2.getResource());
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail")
    public static odase.swrl.SwrlAtom isDegradationPointForRail(odase.Individual arg1, odase.Individual arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1.getResource());
        args.add(arg2.getResource());
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#composedOfRail.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#composedOfRail")
    public static odase.swrl.SwrlAtom composedOfRail(odase.rdf.RdfTerm arg1, odase.rdf.RdfTerm arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1);
        args.add(arg2);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#composedOfRail", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#composedOfRail.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#composedOfRail")
    public static odase.swrl.SwrlAtom composedOfRail(odase.Individual arg1, odase.rdf.RdfTerm arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1.getResource());
        args.add(arg2);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#composedOfRail", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#composedOfRail.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#composedOfRail")
    public static odase.swrl.SwrlAtom composedOfRail(odase.rdf.RdfTerm arg1, odase.Individual arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1);
        args.add(arg2.getResource());
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#composedOfRail", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#composedOfRail.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#composedOfRail")
    public static odase.swrl.SwrlAtom composedOfRail(odase.Individual arg1, odase.Individual arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1.getResource());
        args.add(arg2.getResource());
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#composedOfRail", odase.owl.OwlProperty.PropertyType.OBJECT), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position")
    public static odase.swrl.SwrlAtom position(odase.rdf.RdfTerm arg1, odase.rdf.RdfTerm arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1);
        args.add(arg2);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position", odase.owl.OwlProperty.PropertyType.DATA), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position")
    public static odase.swrl.SwrlAtom position(odase.Individual arg1, odase.rdf.RdfTerm arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1.getResource());
        args.add(arg2);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position", odase.owl.OwlProperty.PropertyType.DATA), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position")
    public static odase.swrl.SwrlAtom position(odase.rdf.RdfTerm arg1, java.lang.Float arg2) {
        odase.DatatypeConverter<java.lang.Float> converter = new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float");
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1);
        args.add(converter.convertNativeTypeToLiteral(arg2));
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position", odase.owl.OwlProperty.PropertyType.DATA), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position")
    public static odase.swrl.SwrlAtom position(odase.Individual arg1, java.lang.Float arg2) {
        odase.DatatypeConverter<java.lang.Float> converter = new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float");
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1.getResource());
        args.add(converter.convertNativeTypeToLiteral(arg2));
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position", odase.owl.OwlProperty.PropertyType.DATA), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue")
    public static odase.swrl.SwrlAtom deviationValue(odase.rdf.RdfTerm arg1, odase.rdf.RdfTerm arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1);
        args.add(arg2);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue", odase.owl.OwlProperty.PropertyType.DATA), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue")
    public static odase.swrl.SwrlAtom deviationValue(odase.Individual arg1, odase.rdf.RdfTerm arg2) {
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1.getResource());
        args.add(arg2);
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue", odase.owl.OwlProperty.PropertyType.DATA), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue")
    public static odase.swrl.SwrlAtom deviationValue(odase.rdf.RdfTerm arg1, java.lang.Float arg2) {
        odase.DatatypeConverter<java.lang.Float> converter = new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float");
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1);
        args.add(converter.convertNativeTypeToLiteral(arg2));
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue", odase.owl.OwlProperty.PropertyType.DATA), args);
    }

    /**
     * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue.
     */
    @odase.annotations.SourceURI("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue")
    public static odase.swrl.SwrlAtom deviationValue(odase.Individual arg1, java.lang.Float arg2) {
        odase.DatatypeConverter<java.lang.Float> converter = new odase.SimpleDatatypeConverter<java.lang.Float>(java.lang.Float.class, "http://www.w3.org/2001/XMLSchema#float");
        java.util.ArrayList<odase.rdf.RdfTerm> args = new java.util.ArrayList(2);
        args.add(arg1.getResource());
        args.add(converter.convertNativeTypeToLiteral(arg2));
        return new odase.swrl.SwrlAtom(new odase.owl.OwlProperty("http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue", odase.owl.OwlProperty.PropertyType.DATA), args);
    }
    /**
     * Contains the URIs of the current namespace's classes.
     */
    public static class ClassURIs {
        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Measurement.
         */
        public static final String Measurement = "http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Measurement";
        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#DegradationPoint.
         */
        public static final String DegradationPoint = "http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#DegradationPoint";
        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#InterventionPoint.
         */
        public static final String InterventionPoint = "http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#InterventionPoint";
        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Rail.
         */
        public static final String Rail = "http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Rail";
        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Track.
         */
        public static final String Track = "http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#Track";
        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#NominalPoint.
         */
        public static final String NominalPoint = "http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#NominalPoint";
        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#SlowdownPoint.
         */
        public static final String SlowdownPoint = "http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#SlowdownPoint";
        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#AlertPoint.
         */
        public static final String AlertPoint = "http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#AlertPoint";
    }
    /**
     * Contains the URIs of the current namespace's properties.
     */
    public static class PropertyURIs {
        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasDegradationPoint.
         */
        public static final String hasDegradationPoint = "http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasDegradationPoint";
        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement.
         */
        public static final String precededByMeasurement = "http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#precededByMeasurement";
        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail.
         */
        public static final String isMeasurementForRail = "http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isMeasurementForRail";
        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement.
         */
        public static final String followedByMeasurement = "http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#followedByMeasurement";
        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isRailForTrack.
         */
        public static final String isRailForTrack = "http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isRailForTrack";
        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasMeasurement.
         */
        public static final String hasMeasurement = "http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#hasMeasurement";
        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail.
         */
        public static final String isDegradationPointForRail = "http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#isDegradationPointForRail";
        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#composedOfRail.
         */
        public static final String composedOfRail = "http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#composedOfRail";
        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position.
         */
        public static final String position = "http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#position";
        /**
         * Generated for http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue.
         */
        public static final String deviationValue = "http://www.mesea.fr/onto-maintenance/ontologies/main/trackMaintenance.owl#deviationValue";
    }
    /**
     * Contains the URIs of the current namespace's individuals.
     */
    public static class IndividualURIs {
    }
}